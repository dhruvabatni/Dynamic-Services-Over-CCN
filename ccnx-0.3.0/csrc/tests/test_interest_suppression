# tests/test_interest_suppression
# 
# Part of the CCNx distribution.
#
# Copyright (C) 2010 Palo Alto Research Center, Inc.
#
# This work is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License version 2 as published by the
# Free Software Foundation.
# This work is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.
#

AFTER : test_single_ccnd
BEFORE : test_single_ccnd_teardown

#
# Test to verify that similar interests from different faces
# don't all get forwarded.
#

#
# Start up a ccnd to field our flurry of requests
#
WithCCND 4 env CCND_DEBUG=7 ccnd 2>ccnd4.out &
WithCCND 4 ccndsmoketest    	# Let forked ccnd get going
trap "WithCCND 4 ccndstop" 0 	# Tear it down at end of test

#
# Construct the test interest
#
UNIQ=`GenSym TIS`
ccn_xmltoccnb -w - <<EOF >unanswered.ccnb
<Interest>
  <Name>
    <Component ccnbencoding="text">unanswered</Component>
    <Component ccnbencoding="text">test</Component>
    <Component ccnbencoding="text">$UNIQ</Component>
  </Name>
</Interest>
EOF

#
# Set up forwarding for test
#
#  0 <--- 4
#
UP=$CCN_LOCAL_PORT_BASE
WithCCND 4 ccndc add /unanswered/test tcp localhost $UP || SkipTest Unable to register prefix


dd if=/dev/zero bs=1 count=1 of=heartbeat.ccnb

#
# Send the interest from 50 sources (simulated external)
#
I=0
while [ $I -lt 50 ]; do
	WithCCND 4 ccndsmoketest -u localhost send unanswered.ccnb >/dev/null
	I=$((I+1))
done

#
# Send the interest from 25 sources (apps)
#
while [ $I -lt 75 ]; do
	WithCCND 4 ccndsmoketest -t 1 -u localhost send heartbeat.ccnb recv send unanswered.ccnb recv
	I=$((I+1))
done

#
# Send the interest from 10 unix-domain sources (apps)
#
while [ $I -lt 80 ]; do
	WithCCND 4 ccndsmoketest -t 1 send unanswered.ccnb recv
	I=$((I+1))
done

#
# Let things settle a bit before teardown.
#
sleep 1
WithCCND 4 ccndstatus
ccndstatus

#
# See how we did.
#
COUNT=`grep -c "interest_to.*/unanswered/" ccnd4.out`
echo COUNT=$COUNT
[ $COUNT -gt 5 ] && Fail more copies of interest than expected - $COUNT
[ $COUNT -lt 1 ] && Fail fewer copies of interest than expected - $COUNT
true
